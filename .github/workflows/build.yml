name: CI
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Cache dependencies
      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: .buildozer_global
          key: buildozer-global-${{ hashFiles('buildozer.spec') }}

      - name: Cache .buildozer directory
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-${{ github.run_id }}

      # Disable BuildKit to avoid metadata issues
      - name: Disable BuildKit
        run: echo "DOCKER_BUILDKIT=0" >> $GITHUB_ENV

      # Build the Docker image from the repositoryâ€™s Dockerfile
      - name: Build Docker Image
        run: docker build -t my-custom-buildozer .

      - name: Install Buildozer
        run: |
          pip install --user --upgrade buildozer
          echo "$HOME/.local/bin" >> $GITHUB_PATH  # Ensure it's added to PATH

      - name: Check Buildozer Installation
        run: which buildozer || echo "Buildozer not found"

      - name: Ensure .buildozer directory exists
        run: mkdir -p .buildozer

      - name: Ensure /home/user exists
        run: |
          sudo mkdir -p /home/user
          sudo chown -R $(id -u):$(id -g) /home/user

      - name: Ensure bin directory exists
        run: mkdir -p /home/user/hostcwd/bin && chmod 755 /home/user/hostcwd/bin

      - name: Fix permissions for Buildozer output
        run: sudo chmod -R 777 /home/user/hostcwd

      #- name: Create .buildozer directory
       # run: mkdir -p $PWD/.buildozer && chmod -R 777 $PWD/.buildozer
        
      # Fix permissions for .buildozer directory
      #- name: Fix permissions
       # run: sudo chown -R $(id -u):$(id -g) $PWD

      # Run Buildozer inside the custom Docker container
      #- name: Run Buildozer
        #run: |
         # docker run --rm -v $PWD:/home/user/hostcwd my-custom-buildozer /bin/bash -c "
         # export PATH=\$HOME/.local/bin:\$PATH &&
         # source ~/.bashrc &&
         # buildozer android debug"
        # Run Buildozer
      - name: Run Buildozer in Docker
        run: docker run --rm -v $PWD:/home/user/hostcwd my-custom-buildozer bash -c "export PATH=\$HOME/.local/bin:\$PATH && buildozer android debug"

      - name: Check Buildozer Output
        run: ls -R .buildozer || echo ".buildozer directory not found"

      - name: Debug Buildozer Path
        run: docker run --rm my-custom-buildozer bash -c "echo \$PATH && which buildozer"

      - name: Buildozer path install check
        run: docker run --rm my-custom-buildozer bash -c "pip show buildozer"

      - name: Search for buildozer
        run: docker run --rm my-custom-buildozer bash -c "find / -name buildozer 2>/dev/null"

      - name: Check python userbase
        run: docker run --rm my-custom-buildozer bash -c "python3 -m site --user-base"

      - name: Print Buildozer Logs
        run: cat .buildozer/android/platform/build.log || echo "No build log found"
          
      - name: Check APK location
        run: find . -name "*.apk" || echo "No APKs found"

      # Upload the APK File
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-output
          path: . **/*.apk
          if-no-files-found: warn
          compression-level: 6
          overwrite: false
          include-hidden-files: false
        env:
          DOCKER_BUILDKIT: 0
        
